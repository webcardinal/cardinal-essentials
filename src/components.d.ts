/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { BreadcrumbSegment, StyleCustomisation, WizardStep } from "./interfaces";
import { RouterHistory } from "@stencil/router";
export namespace Components {
    interface PskAccordion {
        "layout": string;
        "multiple": boolean;
    }
    interface PskAccordionItem {
        "layout": string;
        "opened": boolean;
        "title": string;
    }
    interface PskAttachmentsList {
        "attachmentsClass": string;
        "files": any;
        "noAttachmentsText": string;
        "readOnly": boolean;
    }
    interface PskBreadcrumbNavigator {
        "eventName": string | null;
        "segments": BreadcrumbSegment[];
    }
    interface PskButtonGroup {
        "classes": string | null;
        "icon": string | null;
        "iconColor": string | null;
        "label": string | null;
        "opened": boolean;
    }
    interface PskCard {
        "id": string;
        "title": string;
    }
    interface PskCondition {
        "condition": any | null;
    }
    interface PskContainer {
        "controllerName"?: string | null;
        "history": RouterHistory;
        "htmlFilePath"?: string | null;
        "parentCallback": Function | null;
    }
    interface PskCopyClipboard {
        "id": string;
    }
    interface PskDate {
        "format": string | null;
        "hoverFormat": string | null;
        "value": string | number | null;
    }
    interface PskDetails {
        "eventData": any | null;
        "eventDispatcher": string | null;
        "eventName": string | null;
        "layout": string;
        "opened": boolean;
        "title": string;
    }
    interface PskDraggableList {
    }
    interface PskEcho {
        "value": string | null;
    }
    interface PskFilesChooser {
        "accept"?: string;
        "eventName"?: string;
        "filesAppend"?: boolean;
        "label": string;
        "listFiles"?: boolean;
    }
    interface PskFloatingMenu {
        "opened": boolean;
    }
    interface PskForEach {
        "dataViewModel"?: string | null;
    }
    interface PskGrid {
        "columns": number | null;
        "layout": string | null;
    }
    interface PskHighlight {
        "title": string;
        "typeOfHighlight": string;
    }
    interface PskIcon {
        "classes"?: string | null;
        "color"?: string | null;
        "disableColor"?: boolean;
        "icon": string | null;
    }
    interface PskIconChooser {
        "iconsColor"?: string | null;
        "iconsSize"?: string | null;
        "value": string | null;
    }
    interface PskImg {
        "height": string;
        "src": string;
        "title": string;
        "width": string;
    }
    interface PskLayout {
        "alignContent": string | null;
        "alignContentX": string | null;
        "alignContentY": string | null;
        "alignItems": string | null;
        "alignItemsX": string | null;
        "alignItemsY": string | null;
        "autoColumns": string | null;
        "autoFlow": string | null;
        "autoRows": string | null;
        "columnGap": string | null;
        "columns": number | null;
        "gap": string | null;
        "rowGap": string | null;
        "rows": number | null;
        "templateColumns": string | null;
        "templateRows": string | null;
    }
    interface PskLayoutItem {
        "align": string | null;
        "alignX": string | null;
        "alignY": string | null;
        "column": string | null;
        "columnEnd": string | null;
        "columnStart": string | null;
        "row": string | null;
        "rowEnd": string | null;
        "rowStart": string | null;
    }
    interface PskList {
        "listType": string;
    }
    interface PskListFeedbacks {
        "alertRenderer"?: string;
        "messagesToDisplay"?: number;
        "styleCustomisation"?: StyleCustomisation | string;
        "timeAlive"?: number;
        "toastRenderer"?: string;
    }
    interface PskLoadPlaceholder {
    }
    interface PskModal {
        "eventName": string | null;
        "expanded": boolean;
        "opened": boolean;
    }
    interface PskPinPopup {
        "opened": boolean;
    }
    interface PskProgress {
        "color": string;
        "label": string;
        "max": number;
        "value": number;
    }
    interface PskSlideshow {
        "caption": string;
        "fadeSeconds": number;
        "images": string;
        "title": string;
        "visibleSeconds": number;
    }
    interface PskStepper {
        "activeStep": WizardStep;
        "componentRender": string;
        "handleStepChange": Function;
        "wizardSteps": WizardStep[];
    }
    interface PskStepperRenderer {
        "activeStep": WizardStep;
        "handleStepChange": Function;
        "wizardSteps": WizardStep[];
    }
    interface PskStyle {
        "src": string | null;
    }
    interface PskSwitchButton {
        "active": string | null;
        "eventDispatcher": string | null;
        "inactive": string | null;
        "title": string | null;
        "toggleEvent": string | null;
    }
    interface PskTab {
        "title": string;
    }
    interface PskTabNavigator {
        "default": number;
        "layout": string;
    }
    interface PskToolbar {
        "actions": string | null;
        "eventData": string | null;
        "icons": boolean;
    }
    interface PskUiAlert {
        "message": any;
        "styleCustomisation": StyleCustomisation | string;
        "timeAlive": any;
        "typeOfAlert": string;
    }
    interface PskUiToast {
        "message": any;
        "styleCustomisation"?: StyleCustomisation | string;
        "timeMeasure": string;
        "timeSinceCreation": number;
    }
    interface PskWizard {
        "componentRender": string;
        "wizardSteps"?: WizardStep[];
    }
}
declare global {
    interface HTMLPskAccordionElement extends Components.PskAccordion, HTMLStencilElement {
    }
    var HTMLPskAccordionElement: {
        prototype: HTMLPskAccordionElement;
        new (): HTMLPskAccordionElement;
    };
    interface HTMLPskAccordionItemElement extends Components.PskAccordionItem, HTMLStencilElement {
    }
    var HTMLPskAccordionItemElement: {
        prototype: HTMLPskAccordionItemElement;
        new (): HTMLPskAccordionItemElement;
    };
    interface HTMLPskAttachmentsListElement extends Components.PskAttachmentsList, HTMLStencilElement {
    }
    var HTMLPskAttachmentsListElement: {
        prototype: HTMLPskAttachmentsListElement;
        new (): HTMLPskAttachmentsListElement;
    };
    interface HTMLPskBreadcrumbNavigatorElement extends Components.PskBreadcrumbNavigator, HTMLStencilElement {
    }
    var HTMLPskBreadcrumbNavigatorElement: {
        prototype: HTMLPskBreadcrumbNavigatorElement;
        new (): HTMLPskBreadcrumbNavigatorElement;
    };
    interface HTMLPskButtonGroupElement extends Components.PskButtonGroup, HTMLStencilElement {
    }
    var HTMLPskButtonGroupElement: {
        prototype: HTMLPskButtonGroupElement;
        new (): HTMLPskButtonGroupElement;
    };
    interface HTMLPskCardElement extends Components.PskCard, HTMLStencilElement {
    }
    var HTMLPskCardElement: {
        prototype: HTMLPskCardElement;
        new (): HTMLPskCardElement;
    };
    interface HTMLPskConditionElement extends Components.PskCondition, HTMLStencilElement {
    }
    var HTMLPskConditionElement: {
        prototype: HTMLPskConditionElement;
        new (): HTMLPskConditionElement;
    };
    interface HTMLPskContainerElement extends Components.PskContainer, HTMLStencilElement {
    }
    var HTMLPskContainerElement: {
        prototype: HTMLPskContainerElement;
        new (): HTMLPskContainerElement;
    };
    interface HTMLPskCopyClipboardElement extends Components.PskCopyClipboard, HTMLStencilElement {
    }
    var HTMLPskCopyClipboardElement: {
        prototype: HTMLPskCopyClipboardElement;
        new (): HTMLPskCopyClipboardElement;
    };
    interface HTMLPskDateElement extends Components.PskDate, HTMLStencilElement {
    }
    var HTMLPskDateElement: {
        prototype: HTMLPskDateElement;
        new (): HTMLPskDateElement;
    };
    interface HTMLPskDetailsElement extends Components.PskDetails, HTMLStencilElement {
    }
    var HTMLPskDetailsElement: {
        prototype: HTMLPskDetailsElement;
        new (): HTMLPskDetailsElement;
    };
    interface HTMLPskDraggableListElement extends Components.PskDraggableList, HTMLStencilElement {
    }
    var HTMLPskDraggableListElement: {
        prototype: HTMLPskDraggableListElement;
        new (): HTMLPskDraggableListElement;
    };
    interface HTMLPskEchoElement extends Components.PskEcho, HTMLStencilElement {
    }
    var HTMLPskEchoElement: {
        prototype: HTMLPskEchoElement;
        new (): HTMLPskEchoElement;
    };
    interface HTMLPskFilesChooserElement extends Components.PskFilesChooser, HTMLStencilElement {
    }
    var HTMLPskFilesChooserElement: {
        prototype: HTMLPskFilesChooserElement;
        new (): HTMLPskFilesChooserElement;
    };
    interface HTMLPskFloatingMenuElement extends Components.PskFloatingMenu, HTMLStencilElement {
    }
    var HTMLPskFloatingMenuElement: {
        prototype: HTMLPskFloatingMenuElement;
        new (): HTMLPskFloatingMenuElement;
    };
    interface HTMLPskForEachElement extends Components.PskForEach, HTMLStencilElement {
    }
    var HTMLPskForEachElement: {
        prototype: HTMLPskForEachElement;
        new (): HTMLPskForEachElement;
    };
    interface HTMLPskGridElement extends Components.PskGrid, HTMLStencilElement {
    }
    var HTMLPskGridElement: {
        prototype: HTMLPskGridElement;
        new (): HTMLPskGridElement;
    };
    interface HTMLPskHighlightElement extends Components.PskHighlight, HTMLStencilElement {
    }
    var HTMLPskHighlightElement: {
        prototype: HTMLPskHighlightElement;
        new (): HTMLPskHighlightElement;
    };
    interface HTMLPskIconElement extends Components.PskIcon, HTMLStencilElement {
    }
    var HTMLPskIconElement: {
        prototype: HTMLPskIconElement;
        new (): HTMLPskIconElement;
    };
    interface HTMLPskIconChooserElement extends Components.PskIconChooser, HTMLStencilElement {
    }
    var HTMLPskIconChooserElement: {
        prototype: HTMLPskIconChooserElement;
        new (): HTMLPskIconChooserElement;
    };
    interface HTMLPskImgElement extends Components.PskImg, HTMLStencilElement {
    }
    var HTMLPskImgElement: {
        prototype: HTMLPskImgElement;
        new (): HTMLPskImgElement;
    };
    interface HTMLPskLayoutElement extends Components.PskLayout, HTMLStencilElement {
    }
    var HTMLPskLayoutElement: {
        prototype: HTMLPskLayoutElement;
        new (): HTMLPskLayoutElement;
    };
    interface HTMLPskLayoutItemElement extends Components.PskLayoutItem, HTMLStencilElement {
    }
    var HTMLPskLayoutItemElement: {
        prototype: HTMLPskLayoutItemElement;
        new (): HTMLPskLayoutItemElement;
    };
    interface HTMLPskListElement extends Components.PskList, HTMLStencilElement {
    }
    var HTMLPskListElement: {
        prototype: HTMLPskListElement;
        new (): HTMLPskListElement;
    };
    interface HTMLPskListFeedbacksElement extends Components.PskListFeedbacks, HTMLStencilElement {
    }
    var HTMLPskListFeedbacksElement: {
        prototype: HTMLPskListFeedbacksElement;
        new (): HTMLPskListFeedbacksElement;
    };
    interface HTMLPskLoadPlaceholderElement extends Components.PskLoadPlaceholder, HTMLStencilElement {
    }
    var HTMLPskLoadPlaceholderElement: {
        prototype: HTMLPskLoadPlaceholderElement;
        new (): HTMLPskLoadPlaceholderElement;
    };
    interface HTMLPskModalElement extends Components.PskModal, HTMLStencilElement {
    }
    var HTMLPskModalElement: {
        prototype: HTMLPskModalElement;
        new (): HTMLPskModalElement;
    };
    interface HTMLPskPinPopupElement extends Components.PskPinPopup, HTMLStencilElement {
    }
    var HTMLPskPinPopupElement: {
        prototype: HTMLPskPinPopupElement;
        new (): HTMLPskPinPopupElement;
    };
    interface HTMLPskProgressElement extends Components.PskProgress, HTMLStencilElement {
    }
    var HTMLPskProgressElement: {
        prototype: HTMLPskProgressElement;
        new (): HTMLPskProgressElement;
    };
    interface HTMLPskSlideshowElement extends Components.PskSlideshow, HTMLStencilElement {
    }
    var HTMLPskSlideshowElement: {
        prototype: HTMLPskSlideshowElement;
        new (): HTMLPskSlideshowElement;
    };
    interface HTMLPskStepperElement extends Components.PskStepper, HTMLStencilElement {
    }
    var HTMLPskStepperElement: {
        prototype: HTMLPskStepperElement;
        new (): HTMLPskStepperElement;
    };
    interface HTMLPskStepperRendererElement extends Components.PskStepperRenderer, HTMLStencilElement {
    }
    var HTMLPskStepperRendererElement: {
        prototype: HTMLPskStepperRendererElement;
        new (): HTMLPskStepperRendererElement;
    };
    interface HTMLPskStyleElement extends Components.PskStyle, HTMLStencilElement {
    }
    var HTMLPskStyleElement: {
        prototype: HTMLPskStyleElement;
        new (): HTMLPskStyleElement;
    };
    interface HTMLPskSwitchButtonElement extends Components.PskSwitchButton, HTMLStencilElement {
    }
    var HTMLPskSwitchButtonElement: {
        prototype: HTMLPskSwitchButtonElement;
        new (): HTMLPskSwitchButtonElement;
    };
    interface HTMLPskTabElement extends Components.PskTab, HTMLStencilElement {
    }
    var HTMLPskTabElement: {
        prototype: HTMLPskTabElement;
        new (): HTMLPskTabElement;
    };
    interface HTMLPskTabNavigatorElement extends Components.PskTabNavigator, HTMLStencilElement {
    }
    var HTMLPskTabNavigatorElement: {
        prototype: HTMLPskTabNavigatorElement;
        new (): HTMLPskTabNavigatorElement;
    };
    interface HTMLPskToolbarElement extends Components.PskToolbar, HTMLStencilElement {
    }
    var HTMLPskToolbarElement: {
        prototype: HTMLPskToolbarElement;
        new (): HTMLPskToolbarElement;
    };
    interface HTMLPskUiAlertElement extends Components.PskUiAlert, HTMLStencilElement {
    }
    var HTMLPskUiAlertElement: {
        prototype: HTMLPskUiAlertElement;
        new (): HTMLPskUiAlertElement;
    };
    interface HTMLPskUiToastElement extends Components.PskUiToast, HTMLStencilElement {
    }
    var HTMLPskUiToastElement: {
        prototype: HTMLPskUiToastElement;
        new (): HTMLPskUiToastElement;
    };
    interface HTMLPskWizardElement extends Components.PskWizard, HTMLStencilElement {
    }
    var HTMLPskWizardElement: {
        prototype: HTMLPskWizardElement;
        new (): HTMLPskWizardElement;
    };
    interface HTMLElementTagNameMap {
        "psk-accordion": HTMLPskAccordionElement;
        "psk-accordion-item": HTMLPskAccordionItemElement;
        "psk-attachments-list": HTMLPskAttachmentsListElement;
        "psk-breadcrumb-navigator": HTMLPskBreadcrumbNavigatorElement;
        "psk-button-group": HTMLPskButtonGroupElement;
        "psk-card": HTMLPskCardElement;
        "psk-condition": HTMLPskConditionElement;
        "psk-container": HTMLPskContainerElement;
        "psk-copy-clipboard": HTMLPskCopyClipboardElement;
        "psk-date": HTMLPskDateElement;
        "psk-details": HTMLPskDetailsElement;
        "psk-draggable-list": HTMLPskDraggableListElement;
        "psk-echo": HTMLPskEchoElement;
        "psk-files-chooser": HTMLPskFilesChooserElement;
        "psk-floating-menu": HTMLPskFloatingMenuElement;
        "psk-for-each": HTMLPskForEachElement;
        "psk-grid": HTMLPskGridElement;
        "psk-highlight": HTMLPskHighlightElement;
        "psk-icon": HTMLPskIconElement;
        "psk-icon-chooser": HTMLPskIconChooserElement;
        "psk-img": HTMLPskImgElement;
        "psk-layout": HTMLPskLayoutElement;
        "psk-layout-item": HTMLPskLayoutItemElement;
        "psk-list": HTMLPskListElement;
        "psk-list-feedbacks": HTMLPskListFeedbacksElement;
        "psk-load-placeholder": HTMLPskLoadPlaceholderElement;
        "psk-modal": HTMLPskModalElement;
        "psk-pin-popup": HTMLPskPinPopupElement;
        "psk-progress": HTMLPskProgressElement;
        "psk-slideshow": HTMLPskSlideshowElement;
        "psk-stepper": HTMLPskStepperElement;
        "psk-stepper-renderer": HTMLPskStepperRendererElement;
        "psk-style": HTMLPskStyleElement;
        "psk-switch-button": HTMLPskSwitchButtonElement;
        "psk-tab": HTMLPskTabElement;
        "psk-tab-navigator": HTMLPskTabNavigatorElement;
        "psk-toolbar": HTMLPskToolbarElement;
        "psk-ui-alert": HTMLPskUiAlertElement;
        "psk-ui-toast": HTMLPskUiToastElement;
        "psk-wizard": HTMLPskWizardElement;
    }
}
declare namespace LocalJSX {
    interface PskAccordion {
        "layout"?: string;
        "multiple"?: boolean;
    }
    interface PskAccordionItem {
        "layout"?: string;
        "opened"?: boolean;
        "title"?: string;
    }
    interface PskAttachmentsList {
        "attachmentsClass"?: string;
        "files"?: any;
        "noAttachmentsText"?: string;
        "readOnly"?: boolean;
    }
    interface PskBreadcrumbNavigator {
        "eventName"?: string | null;
        "segments"?: BreadcrumbSegment[];
    }
    interface PskButtonGroup {
        "classes"?: string | null;
        "icon"?: string | null;
        "iconColor"?: string | null;
        "label"?: string | null;
        "opened"?: boolean;
    }
    interface PskCard {
        "id"?: string;
        "title"?: string;
    }
    interface PskCondition {
        "condition"?: any | null;
        "onGetModelEvent"?: (event: CustomEvent<any>) => void;
    }
    interface PskContainer {
        "controllerName"?: string | null;
        "history"?: RouterHistory;
        "htmlFilePath"?: string | null;
        "parentCallback"?: Function | null;
    }
    interface PskCopyClipboard {
        "id"?: string;
        "onGetHistoryType"?: (event: CustomEvent<any>) => void;
    }
    interface PskDate {
        "format"?: string | null;
        "hoverFormat"?: string | null;
        "value"?: string | number | null;
    }
    interface PskDetails {
        "eventData"?: any | null;
        "eventDispatcher"?: string | null;
        "eventName"?: string | null;
        "layout"?: string;
        "opened"?: boolean;
        "title"?: string;
    }
    interface PskDraggableList {
    }
    interface PskEcho {
        "value"?: string | null;
    }
    interface PskFilesChooser {
        "accept"?: string;
        "eventName"?: string;
        "filesAppend"?: boolean;
        "label"?: string;
        "listFiles"?: boolean;
    }
    interface PskFloatingMenu {
        "onNeedFloatingMenu"?: (event: CustomEvent<any>) => void;
        "opened"?: boolean;
    }
    interface PskForEach {
        "dataViewModel"?: string | null;
        "onGetModelEvent"?: (event: CustomEvent<any>) => void;
    }
    interface PskGrid {
        "columns"?: number | null;
        "layout"?: string | null;
    }
    interface PskHighlight {
        "title"?: string;
        "typeOfHighlight"?: string;
    }
    interface PskIcon {
        "classes"?: string | null;
        "color"?: string | null;
        "disableColor"?: boolean;
        "icon"?: string | null;
    }
    interface PskIconChooser {
        "iconsColor"?: string | null;
        "iconsSize"?: string | null;
        "value"?: string | null;
    }
    interface PskImg {
        "height"?: string;
        "src"?: string;
        "title"?: string;
        "width"?: string;
    }
    interface PskLayout {
        "alignContent"?: string | null;
        "alignContentX"?: string | null;
        "alignContentY"?: string | null;
        "alignItems"?: string | null;
        "alignItemsX"?: string | null;
        "alignItemsY"?: string | null;
        "autoColumns"?: string | null;
        "autoFlow"?: string | null;
        "autoRows"?: string | null;
        "columnGap"?: string | null;
        "columns"?: number | null;
        "gap"?: string | null;
        "rowGap"?: string | null;
        "rows"?: number | null;
        "templateColumns"?: string | null;
        "templateRows"?: string | null;
    }
    interface PskLayoutItem {
        "align"?: string | null;
        "alignX"?: string | null;
        "alignY"?: string | null;
        "column"?: string | null;
        "columnEnd"?: string | null;
        "columnStart"?: string | null;
        "row"?: string | null;
        "rowEnd"?: string | null;
        "rowStart"?: string | null;
    }
    interface PskList {
        "listType"?: string;
    }
    interface PskListFeedbacks {
        "alertRenderer"?: string;
        "messagesToDisplay"?: number;
        "onOpenFeedback"?: (event: CustomEvent<any>) => void;
        "styleCustomisation"?: StyleCustomisation | string;
        "timeAlive"?: number;
        "toastRenderer"?: string;
    }
    interface PskLoadPlaceholder {
    }
    interface PskModal {
        "eventName"?: string | null;
        "expanded"?: boolean;
        "onCloseModal"?: (event: CustomEvent<any>) => void;
        "opened"?: boolean;
    }
    interface PskPinPopup {
        "onSendPin"?: (event: CustomEvent<any>) => void;
        "opened"?: boolean;
    }
    interface PskProgress {
        "color"?: string;
        "label"?: string;
        "max"?: number;
        "value"?: number;
    }
    interface PskSlideshow {
        "caption"?: string;
        "fadeSeconds"?: number;
        "images"?: string;
        "title"?: string;
        "visibleSeconds"?: number;
    }
    interface PskStepper {
        "activeStep"?: WizardStep;
        "componentRender"?: string;
        "handleStepChange"?: Function;
        "wizardSteps"?: WizardStep[];
    }
    interface PskStepperRenderer {
        "activeStep"?: WizardStep;
        "handleStepChange"?: Function;
        "wizardSteps"?: WizardStep[];
    }
    interface PskStyle {
        "src"?: string | null;
    }
    interface PskSwitchButton {
        "active"?: string | null;
        "eventDispatcher"?: string | null;
        "inactive"?: string | null;
        "title"?: string | null;
        "toggleEvent"?: string | null;
    }
    interface PskTab {
        "title"?: string;
    }
    interface PskTabNavigator {
        "default"?: number;
        "layout"?: string;
    }
    interface PskToolbar {
        "actions"?: string | null;
        "eventData"?: string | null;
        "icons"?: boolean;
    }
    interface PskUiAlert {
        "message"?: any;
        "onCloseFeedback"?: (event: CustomEvent<any>) => void;
        "styleCustomisation"?: StyleCustomisation | string;
        "timeAlive"?: any;
        "typeOfAlert"?: string;
    }
    interface PskUiToast {
        "message"?: any;
        "onCloseFeedback"?: (event: CustomEvent<any>) => void;
        "styleCustomisation"?: StyleCustomisation | string;
        "timeMeasure"?: string;
        "timeSinceCreation"?: number;
    }
    interface PskWizard {
        "componentRender"?: string;
        "onChangeStep"?: (event: CustomEvent<any>) => void;
        "onFinishWizard"?: (event: CustomEvent<any>) => void;
        "onNeedWizardConfiguration"?: (event: CustomEvent<any>) => void;
        "wizardSteps"?: WizardStep[];
    }
    interface IntrinsicElements {
        "psk-accordion": PskAccordion;
        "psk-accordion-item": PskAccordionItem;
        "psk-attachments-list": PskAttachmentsList;
        "psk-breadcrumb-navigator": PskBreadcrumbNavigator;
        "psk-button-group": PskButtonGroup;
        "psk-card": PskCard;
        "psk-condition": PskCondition;
        "psk-container": PskContainer;
        "psk-copy-clipboard": PskCopyClipboard;
        "psk-date": PskDate;
        "psk-details": PskDetails;
        "psk-draggable-list": PskDraggableList;
        "psk-echo": PskEcho;
        "psk-files-chooser": PskFilesChooser;
        "psk-floating-menu": PskFloatingMenu;
        "psk-for-each": PskForEach;
        "psk-grid": PskGrid;
        "psk-highlight": PskHighlight;
        "psk-icon": PskIcon;
        "psk-icon-chooser": PskIconChooser;
        "psk-img": PskImg;
        "psk-layout": PskLayout;
        "psk-layout-item": PskLayoutItem;
        "psk-list": PskList;
        "psk-list-feedbacks": PskListFeedbacks;
        "psk-load-placeholder": PskLoadPlaceholder;
        "psk-modal": PskModal;
        "psk-pin-popup": PskPinPopup;
        "psk-progress": PskProgress;
        "psk-slideshow": PskSlideshow;
        "psk-stepper": PskStepper;
        "psk-stepper-renderer": PskStepperRenderer;
        "psk-style": PskStyle;
        "psk-switch-button": PskSwitchButton;
        "psk-tab": PskTab;
        "psk-tab-navigator": PskTabNavigator;
        "psk-toolbar": PskToolbar;
        "psk-ui-alert": PskUiAlert;
        "psk-ui-toast": PskUiToast;
        "psk-wizard": PskWizard;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "psk-accordion": LocalJSX.PskAccordion & JSXBase.HTMLAttributes<HTMLPskAccordionElement>;
            "psk-accordion-item": LocalJSX.PskAccordionItem & JSXBase.HTMLAttributes<HTMLPskAccordionItemElement>;
            "psk-attachments-list": LocalJSX.PskAttachmentsList & JSXBase.HTMLAttributes<HTMLPskAttachmentsListElement>;
            "psk-breadcrumb-navigator": LocalJSX.PskBreadcrumbNavigator & JSXBase.HTMLAttributes<HTMLPskBreadcrumbNavigatorElement>;
            "psk-button-group": LocalJSX.PskButtonGroup & JSXBase.HTMLAttributes<HTMLPskButtonGroupElement>;
            "psk-card": LocalJSX.PskCard & JSXBase.HTMLAttributes<HTMLPskCardElement>;
            "psk-condition": LocalJSX.PskCondition & JSXBase.HTMLAttributes<HTMLPskConditionElement>;
            "psk-container": LocalJSX.PskContainer & JSXBase.HTMLAttributes<HTMLPskContainerElement>;
            "psk-copy-clipboard": LocalJSX.PskCopyClipboard & JSXBase.HTMLAttributes<HTMLPskCopyClipboardElement>;
            "psk-date": LocalJSX.PskDate & JSXBase.HTMLAttributes<HTMLPskDateElement>;
            "psk-details": LocalJSX.PskDetails & JSXBase.HTMLAttributes<HTMLPskDetailsElement>;
            "psk-draggable-list": LocalJSX.PskDraggableList & JSXBase.HTMLAttributes<HTMLPskDraggableListElement>;
            "psk-echo": LocalJSX.PskEcho & JSXBase.HTMLAttributes<HTMLPskEchoElement>;
            "psk-files-chooser": LocalJSX.PskFilesChooser & JSXBase.HTMLAttributes<HTMLPskFilesChooserElement>;
            "psk-floating-menu": LocalJSX.PskFloatingMenu & JSXBase.HTMLAttributes<HTMLPskFloatingMenuElement>;
            "psk-for-each": LocalJSX.PskForEach & JSXBase.HTMLAttributes<HTMLPskForEachElement>;
            "psk-grid": LocalJSX.PskGrid & JSXBase.HTMLAttributes<HTMLPskGridElement>;
            "psk-highlight": LocalJSX.PskHighlight & JSXBase.HTMLAttributes<HTMLPskHighlightElement>;
            "psk-icon": LocalJSX.PskIcon & JSXBase.HTMLAttributes<HTMLPskIconElement>;
            "psk-icon-chooser": LocalJSX.PskIconChooser & JSXBase.HTMLAttributes<HTMLPskIconChooserElement>;
            "psk-img": LocalJSX.PskImg & JSXBase.HTMLAttributes<HTMLPskImgElement>;
            "psk-layout": LocalJSX.PskLayout & JSXBase.HTMLAttributes<HTMLPskLayoutElement>;
            "psk-layout-item": LocalJSX.PskLayoutItem & JSXBase.HTMLAttributes<HTMLPskLayoutItemElement>;
            "psk-list": LocalJSX.PskList & JSXBase.HTMLAttributes<HTMLPskListElement>;
            "psk-list-feedbacks": LocalJSX.PskListFeedbacks & JSXBase.HTMLAttributes<HTMLPskListFeedbacksElement>;
            "psk-load-placeholder": LocalJSX.PskLoadPlaceholder & JSXBase.HTMLAttributes<HTMLPskLoadPlaceholderElement>;
            "psk-modal": LocalJSX.PskModal & JSXBase.HTMLAttributes<HTMLPskModalElement>;
            "psk-pin-popup": LocalJSX.PskPinPopup & JSXBase.HTMLAttributes<HTMLPskPinPopupElement>;
            "psk-progress": LocalJSX.PskProgress & JSXBase.HTMLAttributes<HTMLPskProgressElement>;
            "psk-slideshow": LocalJSX.PskSlideshow & JSXBase.HTMLAttributes<HTMLPskSlideshowElement>;
            "psk-stepper": LocalJSX.PskStepper & JSXBase.HTMLAttributes<HTMLPskStepperElement>;
            "psk-stepper-renderer": LocalJSX.PskStepperRenderer & JSXBase.HTMLAttributes<HTMLPskStepperRendererElement>;
            "psk-style": LocalJSX.PskStyle & JSXBase.HTMLAttributes<HTMLPskStyleElement>;
            "psk-switch-button": LocalJSX.PskSwitchButton & JSXBase.HTMLAttributes<HTMLPskSwitchButtonElement>;
            "psk-tab": LocalJSX.PskTab & JSXBase.HTMLAttributes<HTMLPskTabElement>;
            "psk-tab-navigator": LocalJSX.PskTabNavigator & JSXBase.HTMLAttributes<HTMLPskTabNavigatorElement>;
            "psk-toolbar": LocalJSX.PskToolbar & JSXBase.HTMLAttributes<HTMLPskToolbarElement>;
            "psk-ui-alert": LocalJSX.PskUiAlert & JSXBase.HTMLAttributes<HTMLPskUiAlertElement>;
            "psk-ui-toast": LocalJSX.PskUiToast & JSXBase.HTMLAttributes<HTMLPskUiToastElement>;
            "psk-wizard": LocalJSX.PskWizard & JSXBase.HTMLAttributes<HTMLPskWizardElement>;
        }
    }
}
